name: Parse Gmail Emails Daily

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  parse-emails:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create data directory
      run: mkdir -p data
      
    - name: Set environment variables for GitHub Secrets
      run: |
        echo "USE_GITHUB_SECRETS=true" >> $GITHUB_ENV
        echo "DATA_FOLDER=$GITHUB_WORKSPACE/data" >> $GITHUB_ENV
        
    - name: Validate and set up JSON secrets
      run: |
        # Create data directory
        mkdir -p data
        
        # Decode and write token.json
        echo '${{ secrets.GOOGLE_TOKEN_JSON }}' | base64 -d > data/token.json
        
        # Decode and write credentials.json
        echo '${{ secrets.GOOGLE_CREDENTIALS_JSON }}' | base64 -d > data/credentials.json
        
        # Validate JSON files
        if python -c "import json; json.load(open('data/token.json'))"; then
          echo "GOOGLE_TOKEN_JSON is valid JSON"
        else
          echo "GOOGLE_TOKEN_JSON is invalid JSON"
          echo "Content:"
          cat data/token.json
          exit 1
        fi
        
        if python -c "import json; json.load(open('data/credentials.json'))"; then
          echo "GOOGLE_CREDENTIALS_JSON is valid JSON"
        else
          echo "GOOGLE_CREDENTIALS_JSON is invalid JSON"
          echo "Content:"
          cat data/credentials.json
          exit 1
        fi
        
    - name: Run email parser
      run: python -m scholar_alters.parse_gmail_message
        
    - name: Check for changes
      id: check_changes
      run: |
        if [ -n "$(git status --porcelain data/)" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push if changes
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/
        git commit -m "Auto-update: Parse emails $(date -u +'%Y-%m-%d')" || echo "No changes to commit"
        git push
